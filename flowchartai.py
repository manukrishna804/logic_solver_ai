# -*- coding: utf-8 -*-
"""flowchartai.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1F2O1gCYwatWfcSMZirBD7VvhVKXdCK-S
"""



"""To use the Gemini API, you'll need an API key. If you don't already have one, create a key in Google AI Studio.
In Colab, add the key to the secrets manager under the "ðŸ”‘" in the left panel. Give it the name `GOOGLE_API_KEY`. Then pass the key to the SDK:
"""

# Import the Python SDK
import google.generativeai as genai
# Used to securely store your API key
from google.colab import userdata

GOOGLE_API_KEY=userdata.get('GOOGLE_API_KEY')
genai.configure(api_key=GOOGLE_API_KEY)

"""Before you can make any API calls, you need to initialize the Generative Model."""

# Initialize the Gemini API
gemini_model = genai.GenerativeModel('gemini-1.5-flash-latest')

"""Now, I'll define a function that takes a coding question and uses the model to generate an algorithm."""

def generate_algorithm(coding_question):
  """Generates an algorithm for a given coding question using an AI model.

  Args:
    coding_question: A string containing the coding question.

  Returns:
    A string containing the generated algorithm.
  """
  prompt = f"Generate an algorithm for the following coding question:\n{coding_question}\n\nAlgorithm:"
  response = gemini_model.generate_content(prompt)
  return response.text

"""You can now use the `generate_algorithm` function like this:"""

# Example usage:
question = "Write a function to reverse a linked list."
algorithm = generate_algorithm(question)
print(algorithm)